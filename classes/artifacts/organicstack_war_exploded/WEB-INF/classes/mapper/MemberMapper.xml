<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.murmuler.organicstack.mybatis.MemberMapper">

    <select id="selectAllMembers" resultType="com.murmuler.organicstack.vo.MemberVO">
        SELECT member_id AS memberId, id, name, gender, birth, phone, pwd, email, nickname
        FROM member_tb;
    </select>

    <select id="selectMemberById" resultType="com.murmuler.organicstack.vo.MemberVO">
        SELECT member_id AS memberId, id, name, gender, birth, phone, pwd, email, nickname FROM member_tb WHERE id = #{id}
    </select>

    <select id="selectMemberByMemberId" resultType="com.murmuler.organicstack.vo.MemberVO">
        SELECT member_id AS memberId, id, name, gender, birth, phone, pwd, email, nickname FROM member_tb WHERE member_id = #{memberId}
    </select>

    <insert id="insertMember" parameterType="com.murmuler.organicstack.vo.MemberVO">
        INSERT INTO member_tb (id, name, gender, birth, phone, pwd, email, nickname)
        VALUE(#{id}, #{name}, #{gender}, #{birth}, #{phone}, #{pwd}, #{email}, #{nickname})
    </insert>

    <delete id="deleteMultiMember" parameterType="com.murmuler.organicstack.vo.MemberVO">
        DELETE FROM member_tb
        WHERE member_id in (
        <foreach collection="ids" item="id" separator=",">#{id}</foreach>
        )
    </delete>

    <insert id="insertLikeRoom" parameterType="hashmap">
        INSERT INTO like_list_tb VALUES (${memberId}, ${roomId})
    </insert>

    <select id="selectLikeRoom" parameterType="hashmap" resultType="java.lang.Integer">
        SELECT room_id FROM like_list_tb WHERE member_id = ${memberId}
    </select>

    <delete id="deleteLikeRoom" parameterType="hashmap">
        DELETE FROM like_list_tb
        WHERE member_id = ${memberId} AND room_id = ${roomId}
    </delete>

    <update id="updateMemberInfoByMemberId" parameterType="hashmap">
        UPDATE member_tb
        SET name = #{realname}, nickname = #{nickname}, email = #{email}, phone = #{phone}
        WHERE member_id = #{memberId}
    </update>

    <update id="updatePasswordByMemberId" parameterType="hashmap">
        UPDATE member_tb SET pwd = #{newPwd}
        WHERE member_id = #{memberId}
    </update>
</mapper>